name: GH Actions CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

concurrency:
  # Specific group naming so CI is only cancelled
  # within same PR or on merge to main
  group: {{ "${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}" }}
  cancel-in-progress: true

defaults:
  run:
{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
    shell: bash
{% else %}
    shell: bash -l {0}
{% endif %}

jobs:
  main_tests:
    if: "github.repository == '{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}'"
    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
        fail-fast: false
        matrix:
          os: [macOS-latest, ubuntu-latest, windows-latest]
          python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Build information
      run: |
        uname -a
        df -h
        ulimit -a

{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
    - name: Set up Python {{ '${{ matrix.python-version }}' }}
      uses: actions/setup-python@v4
      with:
        python-version: {{ '${{ matrix.python-version }}' }}

    - name: Install testing dependencies
      run: |
        python -m pip install -U pytest pytest-xdist pytest-cov codecov
{% else %}
    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - name: Install conda dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: {{ '${{ matrix.python-version }}' }}
        environment-file: devtools/conda-envs/test_env.yaml
        add-pip-as-python-dependency: true
        architecture: x64
{% if cookiecutter.dependency_source == 'Prefer conda-forge over the default anaconda channel with pip fallback' %}
        mamba-version: "*"
        channels: conda-forge, defaults
{% elif cookiecutter.dependency_source == 'Prefer default anaconda channel with pip fallback' %}
        channels: defaults
{% endif %}
        activate-environment: {{cookiecutter.repo_name}}-test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true
{% endif %}

    - name: Install package
      run: |
        python --version
        python -m pip install . {% if cookiecutter.dependency_source != 'Dependencies from pip only (no conda)' %} --no-deps {% endif %}

    - name: Python information
      run: |
        which python
        which pip
        pip list
{% if cookiecutter.dependency_source != 'Dependencies from pip only (no conda)' %}
        conda info
        conda list
{% endif %}

    - name: Run tests
      run: |
        pytest -n 2 -v --cov={{ cookiecutter.repo_name }} --cov-report=xml --color=yes {{ cookiecutter.repo_name }}/tests/

    - name: codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml
        name: codecov-{{ '${{ matrix.os }}' }}-py{{ '${{ matrix.python-version }}' }}
        verbose: True


  pylint_check:
    if: "github.repository == '{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}'"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install Pylint
      run: |
        which pip
        which python
        pip install pylint

    - name: Run Pylint
      env:
        PYLINTRC: .pylintrc
      run: |
        pylint {{ cookiecutter.repo_name }}


  pypi_check:
    if: "github.repository == '{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}'"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python {{ '${{ matrix.python-version }}' }}
      uses: actions/setup-python@v3
      with:
        python-version: {{ '${{ matrix.python-version }}' }}

    - name: Install dependencies
      run: |
        pip install setuptools cython numpy twine

    - name: Build package
      run: |
        python setup.py sdist

    - name: Check package build
      run: |
        DISTRIBUTION=$(ls -t1 dist/{{ cookiecutter.repo_name }}-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no distribution dist/{{ cookiecutter.repo_name }}-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION
